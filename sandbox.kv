GridLayout:
	cols: 1
	Screenmanager:
		id: screenmanager
		MainWindow:
			name: "main"
			id: main
		OverlayWindow:
			name: "overlay"
			id: overlay

<MainWindow>:

	FloatLayout:
		canvas.before:
		    Color:
		        rgba: 1, 1, 1, 1
		    Rectangle:
		        pos: self.pos
		        size: self.size

		GridLayout:
			cols: 1
			pos_hint: {"top":1}
			size_hint: 1, 0.8
			canvas.before: 
		        Color:
		            rgba: 0, 0, 0, 1
		        Rectangle:
		            pos: self.pos
		            size: self.size

			Camera:
				id: camera
				index: 0
				resolution: self.size
				play: True

		GridLayout:
			cols: 3
			pos_hint: {"bottom":1}
			size_hint: 1, 0.2
			canvas.before:
		        Color:
		            rgba: 0,0,0,0.5
		        Rectangle:
		            pos: self.pos
		            size: self.size

		    FloatLayout:
	
			    Button:
			    	id: backbtn		    	 
			    	pos_hint: {"center_x":0.5,"center_y":0.5}
			    	#size: min(self.size),min(self.size)
			    	size_hint: 0.5,0.5 #This is neccessary
			    	background_color: 0,0,0,0
			    	on_press:
				    	app.root.ids.screenmanager.transition.direction = 'right'
				    	app.root.ids.screenmanager.current = 'main'

			    	Image:
			    		source: 'backbtn_up.png' if self.parent.state=="normal" else 'backbtn_down.png'
			    		center_x: self.parent.center_x
			    		center_y: self.parent.center_y
			    		size: self.parent.size 
			    		allow_stretch: False			    	

			FloatLayout:
			   
			    Button:
			    	id: shutterbtn
			    	pos_hint: {"center_x":0.5, "center_y":0.5}
			    	#size: min(self.size),min(self.size)
			    	size_hint: 0.7,0.7 #This is neccessary
			    	background_color: 0,0,0,0
			    	
			    	on_press: 
			    		root.capture()
			    		app.root.ids.overlay.createimg()
			    	on_release: 
			    		app.root.ids['screenmanager'].transition.direction = 'left'
			    		app.root.ids['screenmanager'].current = 'overlay'
			    	
			    	Image:
			    		source: 'shutterbtn_up.png' if self.parent.state=="normal" else 'shutterbtn_down.png'
			    		center_x: self.parent.center_x
			    		center_y: self.parent.center_y
			    		size: self.parent.size 
			    		allow_stretch: False	 			
			    	
			    		
		    FloatLayout:
		    	pos_hint: {"center_x":0.5, "center_y":0.5}
			    
			    Button:
			    	id: cyclebtn
			    	text: "Next cam"
			    	pos_hint: {"center_x":0.5, "center_y":0.5}
			    	size: self.parent.size
			    	size_hint: 0.8,0.8#This is neccessary
			    	background_color: 0,0,0,0
			    	canvas.before: 
			    		Color:
			    			rgba: (0.247,0.749,0.749,0.5) if self.state=="normal" else (0.247,0.749,0.749,1)
			    		RoundedRectangle:
			    			size: min(self.size),min(self.size)
			    			pos: self.pos
			    			radius: [10,]
			    			
			    	on_press: 
			    		root.cyclecam()


<OverlayWindow>:

	FloatLayout:
		id: overlay_mainfloat	
		canvas.before:
		    Color:
		        rgba: 1, 1, 1, 1
		    Rectangle:
		        pos: self.pos
		        size: self.size

		GridLayout:
			cols: 1
			id: checkwindow

			



    
    	GridLayout:
			cols: 3
			pos_hint: {"bottom":1}
			size_hint: 1, 0.2
			canvas.before:
		        Color:
		            rgba: 0,0,0,0.5
		        Rectangle:
		            pos: self.pos
		            size: self.size

		    FloatLayout:

			    Button:
			    	id: backbtn2		    	 
			    	pos_hint: {"center_x":0.5,"center_y":0.5}
			    	#size: min(self.size),min(self.size)
			    	size_hint: 0.5,0.5 #This is neccessary
			    	background_color: 0,0,0,0
			    	on_release:
				    	app.root.ids.screenmanager.transition.direction = 'right'
				    	app.root.ids.screenmanager.current = 'main'
				    	root.removeimg()

			    	Image:
			    		source: 'backbtn_up.png' if self.parent.state=="normal" else 'backbtn_down.png'
			    		center_x: self.parent.center_x
			    		center_y: self.parent.center_y
			    		size: self.parent.size 
			    		allow_stretch: False


				    

			Label:
				

			Label:
		
			



	
